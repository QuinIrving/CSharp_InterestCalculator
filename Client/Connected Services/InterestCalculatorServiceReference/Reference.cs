//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.InterestCalculatorServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AllInterest", Namespace="http://schemas.datacontract.org/2004/07/InterestCalculator")]
    [System.SerializableAttribute()]
    public partial class AllInterest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CompoundInterestValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PeriodicCompoundInterestValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SimpleInterestValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SimplePlusPrincipalInterestValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CompoundInterestValue {
            get {
                return this.CompoundInterestValueField;
            }
            set {
                if ((this.CompoundInterestValueField.Equals(value) != true)) {
                    this.CompoundInterestValueField = value;
                    this.RaisePropertyChanged("CompoundInterestValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PeriodicCompoundInterestValue {
            get {
                return this.PeriodicCompoundInterestValueField;
            }
            set {
                if ((this.PeriodicCompoundInterestValueField.Equals(value) != true)) {
                    this.PeriodicCompoundInterestValueField = value;
                    this.RaisePropertyChanged("PeriodicCompoundInterestValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SimpleInterestValue {
            get {
                return this.SimpleInterestValueField;
            }
            set {
                if ((this.SimpleInterestValueField.Equals(value) != true)) {
                    this.SimpleInterestValueField = value;
                    this.RaisePropertyChanged("SimpleInterestValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SimplePlusPrincipalInterestValue {
            get {
                return this.SimplePlusPrincipalInterestValueField;
            }
            set {
                if ((this.SimplePlusPrincipalInterestValueField.Equals(value) != true)) {
                    this.SimplePlusPrincipalInterestValueField = value;
                    this.RaisePropertyChanged("SimplePlusPrincipalInterestValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InterestCalculatorServiceReference.IInterestCalculations")]
    public interface IInterestCalculations {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/SimpleInterest", ReplyAction="http://tempuri.org/IInterestCalculations/SimpleInterestResponse")]
        decimal SimpleInterest(decimal _principal, decimal _rate, float _time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/SimpleInterest", ReplyAction="http://tempuri.org/IInterestCalculations/SimpleInterestResponse")]
        System.Threading.Tasks.Task<decimal> SimpleInterestAsync(decimal _principal, decimal _rate, float _time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/SimplePlusPrincipalInterest", ReplyAction="http://tempuri.org/IInterestCalculations/SimplePlusPrincipalInterestResponse")]
        decimal SimplePlusPrincipalInterest(decimal _principal, decimal _rate, float _time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/SimplePlusPrincipalInterest", ReplyAction="http://tempuri.org/IInterestCalculations/SimplePlusPrincipalInterestResponse")]
        System.Threading.Tasks.Task<decimal> SimplePlusPrincipalInterestAsync(decimal _principal, decimal _rate, float _time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/CompoundInterest", ReplyAction="http://tempuri.org/IInterestCalculations/CompoundInterestResponse")]
        decimal CompoundInterest(decimal _principal, decimal _rate, float _time, int _n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/CompoundInterest", ReplyAction="http://tempuri.org/IInterestCalculations/CompoundInterestResponse")]
        System.Threading.Tasks.Task<decimal> CompoundInterestAsync(decimal _principal, decimal _rate, float _time, int _n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/PeriodicCompoundInterest", ReplyAction="http://tempuri.org/IInterestCalculations/PeriodicCompoundInterestResponse")]
        decimal PeriodicCompoundInterest(decimal _principal, decimal _rate, float _time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/PeriodicCompoundInterest", ReplyAction="http://tempuri.org/IInterestCalculations/PeriodicCompoundInterestResponse")]
        System.Threading.Tasks.Task<decimal> PeriodicCompoundInterestAsync(decimal _principal, decimal _rate, float _time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/CalculateAll", ReplyAction="http://tempuri.org/IInterestCalculations/CalculateAllResponse")]
        Client.InterestCalculatorServiceReference.AllInterest CalculateAll(decimal _principal, decimal _rate, float _time, int _n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInterestCalculations/CalculateAll", ReplyAction="http://tempuri.org/IInterestCalculations/CalculateAllResponse")]
        System.Threading.Tasks.Task<Client.InterestCalculatorServiceReference.AllInterest> CalculateAllAsync(decimal _principal, decimal _rate, float _time, int _n);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInterestCalculationsChannel : Client.InterestCalculatorServiceReference.IInterestCalculations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InterestCalculationsClient : System.ServiceModel.ClientBase<Client.InterestCalculatorServiceReference.IInterestCalculations>, Client.InterestCalculatorServiceReference.IInterestCalculations {
        
        public InterestCalculationsClient() {
        }
        
        public InterestCalculationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InterestCalculationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterestCalculationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterestCalculationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public decimal SimpleInterest(decimal _principal, decimal _rate, float _time) {
            return base.Channel.SimpleInterest(_principal, _rate, _time);
        }
        
        public System.Threading.Tasks.Task<decimal> SimpleInterestAsync(decimal _principal, decimal _rate, float _time) {
            return base.Channel.SimpleInterestAsync(_principal, _rate, _time);
        }
        
        public decimal SimplePlusPrincipalInterest(decimal _principal, decimal _rate, float _time) {
            return base.Channel.SimplePlusPrincipalInterest(_principal, _rate, _time);
        }
        
        public System.Threading.Tasks.Task<decimal> SimplePlusPrincipalInterestAsync(decimal _principal, decimal _rate, float _time) {
            return base.Channel.SimplePlusPrincipalInterestAsync(_principal, _rate, _time);
        }
        
        public decimal CompoundInterest(decimal _principal, decimal _rate, float _time, int _n) {
            return base.Channel.CompoundInterest(_principal, _rate, _time, _n);
        }
        
        public System.Threading.Tasks.Task<decimal> CompoundInterestAsync(decimal _principal, decimal _rate, float _time, int _n) {
            return base.Channel.CompoundInterestAsync(_principal, _rate, _time, _n);
        }
        
        public decimal PeriodicCompoundInterest(decimal _principal, decimal _rate, float _time) {
            return base.Channel.PeriodicCompoundInterest(_principal, _rate, _time);
        }
        
        public System.Threading.Tasks.Task<decimal> PeriodicCompoundInterestAsync(decimal _principal, decimal _rate, float _time) {
            return base.Channel.PeriodicCompoundInterestAsync(_principal, _rate, _time);
        }
        
        public Client.InterestCalculatorServiceReference.AllInterest CalculateAll(decimal _principal, decimal _rate, float _time, int _n) {
            return base.Channel.CalculateAll(_principal, _rate, _time, _n);
        }
        
        public System.Threading.Tasks.Task<Client.InterestCalculatorServiceReference.AllInterest> CalculateAllAsync(decimal _principal, decimal _rate, float _time, int _n) {
            return base.Channel.CalculateAllAsync(_principal, _rate, _time, _n);
        }
    }
}
